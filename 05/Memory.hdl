// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=address[14],out=n14);
    And(a=n14,b=load,out=Rload);
    And(a=address[14],b=load,out=Sload);

    RAM16K(in=in,load=Rload,address=address[0..13],out=ram);
    //RAM16K能決定的位址[0..13],[14]必0
    Screen(in=in,load=Sload,address=address[0..12],out=scr);
    //Screen能決定的位址[0..12],[14]必1,[13]必0
    Keyboard(out=kout);
    //Keyboard不能寫入,只能輸出=>沒有in線,只有out線


    //先選是RAM16K或是螢幕鍵盤,再選螢幕或是鍵盤

    Mux16(a=ram,b=sk,sel=address[14],out=out);
    //在此決定[14]為0時RAM16K,為1時Screen或Keyboard
    Mux16(a=scr,b=kout,sel=address[13],out=sk);
    //在此決定[13]為0時Screen,為1時Keyboard
    
}